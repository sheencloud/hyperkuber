---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: hyperkuber
  name: hyperkuber

---
apiVersion: v1
data:
  config.yaml: |-
    server:
      name : "Hk-Server"
      listen : "0.0.0.0:8080"

    mysql:
      host : "mysql"
      port : 3306
      username : "hyperkuber"
      password : "hyperkuber"
      database : "hyperkuber"
      migerate : true
      log : "DEBUG"

    redis:
      addr : "redis:6379"
      password : ""
kind: ConfigMap
metadata:
  name: hyperkuber-configmap
  namespace: hyperkuber
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: server
  name: server
  namespace: hyperkuber
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: server
    spec:
      containers:
        - image: sheencloud/hyperkuber-server
          imagePullPolicy: Always
          name: hyperkuber-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - name: config-volume
            mountPath: /hk/config
          - name: chart-volume
            mountPath: /tmp/hyperkuber/helm/
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: config.yaml
                path: config.yaml
            name: hyperkuber-configmap
          name: config-volume
        - name: chart-volume
          emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: server
  name: server
  namespace: hyperkuber
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: server
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: portal
  name: portal
  namespace: hyperkuber
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: portal
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: portal
    spec:
      containers:
        - image: sheencloud/hyperkuber-web
          imagePullPolicy: Always
          name: hyperkuber-portal
          securityContext:
            privileged: true
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
          # Use secret in real usage
          - name: HYPERKUBER_SERVER_ADDRESS
            value: "server:8080"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: portal
  name: portal
  namespace: hyperkuber
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: portal
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: portal
  namespace: hyperkuber
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: portal
            port:
              number: 80